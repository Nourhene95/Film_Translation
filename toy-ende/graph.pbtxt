node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "string_to_index/hash_table"
  op: "HashTableV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_data/toy-ende/src-vocab.txt_50000_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "string_to_index/hash_table/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "string_to_index/hash_table/table_init/asset_filepath"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "data/toy-ende/src-vocab.txt"
      }
    }
  }
}
node {
  name: "string_to_index/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "string_to_index/hash_table"
  input: "string_to_index/hash_table/table_init/asset_filepath"
  device: "/device:CPU:0"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 50000
    }
  }
}
node {
  name: "string_to_index_1/hash_table"
  op: "HashTableV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_data/toy-ende/tgt-vocab.txt_50000_-2_-1"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "string_to_index_1/hash_table/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "string_to_index_1/hash_table/table_init/asset_filepath"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "data/toy-ende/tgt-vocab.txt"
      }
    }
  }
}
node {
  name: "string_to_index_1/hash_table/table_init"
  op: "InitializeTableFromTextFileV2"
  input: "string_to_index_1/hash_table"
  input: "string_to_index_1/hash_table/table_init/asset_filepath"
  device: "/device:CPU:0"
  attr {
    key: "delimiter"
    value {
      s: "\t"
    }
  }
  attr {
    key: "key_index"
    value {
      i: -2
    }
  }
  attr {
    key: "value_index"
    value {
      i: -1
    }
  }
  attr {
    key: "vocab_size"
    value {
      i: 50000
    }
  }
}
node {
  name: "filenames"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "data/toy-ende/src-train.txt"
      }
    }
  }
}
node {
  name: "compression_type"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 262144
      }
    }
  }
}
node {
  name: "filenames_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "data/toy-ende/tgt-train.txt"
      }
    }
  }
}
node {
  name: "compression_type_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 262144
      }
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1000000
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "buffer_size_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "Iterator"
  op: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TextLineDataset"
  op: "TextLineDataset"
  input: "filenames"
  input: "compression_type"
  input: "buffer_size"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TextLineDataset_1"
  op: "TextLineDataset"
  input: "filenames_1"
  input: "compression_type_1"
  input: "buffer_size_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ZipDataset"
  op: "ZipDataset"
  input: "TextLineDataset"
  input: "TextLineDataset_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "ZipDataset"
  input: "buffer_size_2"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "ParallelMapDataset"
  op: "ParallelMapDataset"
  input: "ShuffleDataset"
  input: "string_to_index/hash_table"
  input: "string_to_index/hash_table/Const"
  input: "string_to_index_1/hash_table"
  input: "string_to_index_1/hash_table/Const"
  input: "num_parallel_calls"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_map_func_QXKrvmWWnm8"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
}
node {
  name: "FilterDataset"
  op: "FilterDataset"
  input: "ParallelMapDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "predicate"
    value {
      func {
        name: "tf_predicate_y4hpkliXgSs"
      }
    }
  }
}
node {
  name: "GroupByWindowDataset"
  op: "GroupByWindowDataset"
  input: "FilterDataset"
  device: "/device:CPU:0"
  attr {
    key: "Tkey_func_other_arguments"
    value {
      list {
      }
    }
  }
  attr {
    key: "Treduce_func_other_arguments"
    value {
      list {
      }
    }
  }
  attr {
    key: "Twindow_size_func_other_arguments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "key_func"
    value {
      func {
        name: "tf_key_func_2zDJOG27JE0"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reduce_func"
    value {
      func {
        name: "tf_reduce_func_l6Icvp8rAiY"
      }
    }
  }
  attr {
    key: "window_size_func"
    value {
      func {
        name: "tf_window_size_func_1AjaO2cYIvE"
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "GroupByWindowDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "RepeatDataset"
  input: "buffer_size_3"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "PrefetchDataset"
  input: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Iterator"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "Iterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
        type: DT_INT64
        type: DT_INT64
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
}
node {
  name: "words_per_sec/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "words_per_sec/Sum"
  op: "Sum"
  input: "IteratorGetNext:1"
  input: "words_per_sec/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "words_per_sec/Cast"
  op: "Cast"
  input: "words_per_sec/Sum"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "words_per_sec/features_init/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "words_per_sec/features_init"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "words_per_sec/features_init/Assign"
  op: "Assign"
  input: "words_per_sec/features_init"
  input: "words_per_sec/features_init/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/features_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "words_per_sec/features_init/read"
  op: "Identity"
  input: "words_per_sec/features_init"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/features_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "words_per_sec/features"
  op: "AssignAdd"
  input: "words_per_sec/features_init"
  input: "words_per_sec/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/features_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "words_per_sec/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "words_per_sec/Sum_1"
  op: "Sum"
  input: "IteratorGetNext:5"
  input: "words_per_sec/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "words_per_sec/Cast_1"
  op: "Cast"
  input: "words_per_sec/Sum_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "words_per_sec/labels_init/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "words_per_sec/labels_init"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "words_per_sec/labels_init/Assign"
  op: "Assign"
  input: "words_per_sec/labels_init"
  input: "words_per_sec/labels_init/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/labels_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "words_per_sec/labels_init/read"
  op: "Identity"
  input: "words_per_sec/labels_init"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/labels_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "words_per_sec/labels"
  op: "AssignAdd"
  input: "words_per_sec/labels_init"
  input: "words_per_sec/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/labels_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "split_inputs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_inputs/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_inputs/split"
  op: "Split"
  input: "split_inputs/split/split_dim"
  input: "IteratorGetNext:2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "split_inputs/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_inputs/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_inputs/split_1"
  op: "Split"
  input: "split_inputs/split_1/split_dim"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "split_inputs/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_inputs/split_2/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_inputs/split_2"
  op: "Split"
  input: "split_inputs/split_2/split_dim"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "split_inputs_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_inputs_1/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_inputs_1/split"
  op: "Split"
  input: "split_inputs_1/split/split_dim"
  input: "IteratorGetNext:6"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "split_inputs_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_inputs_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_inputs_1/split_1"
  op: "Split"
  input: "split_inputs_1/split_1/split_dim"
  input: "IteratorGetNext:5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "split_inputs_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_inputs_1/split_2/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_inputs_1/split_2"
  op: "Split"
  input: "split_inputs_1/split_2/split_dim"
  input: "IteratorGetNext:3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "split_inputs_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_inputs_1/split_3/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_inputs_1/split_3"
  op: "Split"
  input: "split_inputs_1/split_3/split_dim"
  input: "IteratorGetNext:4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\303\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform/max"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform/mul"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50001
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/Assign"
  op: "Assign"
  input: "seq2seq/encoder/w_embs"
  input: "seq2seq/encoder/w_embs/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/encoder/w_embs/read"
  op: "Identity"
  input: "seq2seq/encoder/w_embs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
  op: "convert_gradient_to_tensor_6zp6qx6jCWM"
  input: "seq2seq/encoder/w_embs/read"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/embedding_lookup/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/embedding_lookup"
  op: "GatherV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
  input: "split_inputs/split_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/embedding_lookup/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/dropout/dropout/keep_prob"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/DropoutWrapperInit/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/DropoutWrapperInit/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/DropoutWrapperInit/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/DropoutWrapperInit_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/DropoutWrapperInit_1/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/DropoutWrapperInit_1/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/range/start"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Rank"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat/values_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat/values_0"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/range"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
  op: "Transpose"
  input: "seq2seq/parallel_0/seq2seq/encoder/embedding_lookup"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/sequence_length"
  op: "Identity"
  input: "split_inputs/split_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/sequence_length"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/stack"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/stack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor seq2seq/parallel_0/seq2seq/encoder/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor seq2seq/parallel_0/seq2seq/encoder/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Assert/data_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/All"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/stack"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Assert/data_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/CheckSeqLen"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/sequence_length"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape_2"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1/stack"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1/stack_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape_3"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Shape_3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2/stack"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2/stack_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/zeros"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Min"
  op: "Min"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/CheckSeqLen"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Max"
  op: "Max"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/CheckSeqLen"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/time"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/range/start"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/range"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Maximum/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Maximum"
  op: "Maximum"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Maximum/x"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Minimum"
  op: "Minimum"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Maximum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/iteration_counter"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/iteration_counter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_1"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/time"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_2"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_3"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_4"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_5"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_6"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_1"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_3"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_4"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_4"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_5"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_5"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_6"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_6"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/strided_slice_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less_1"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less_1/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Minimum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Less_1"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  op: "LoopCond"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LogicalAnd"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_1"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_2"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_3"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_4"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_5"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_6"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_1:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_2"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_2:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_3"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_3:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_4"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_4:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_5"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_5:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_6"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_6:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/CheckSeqLen"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  op: "Identity"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read"
  op: "Identity"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat/axis"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_4"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split/split_dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split"
  op: "Split"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split/split_dim"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split:2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  op: "Identity"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read"
  op: "Identity"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat/axis"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_6"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split/split_dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split"
  op: "Split"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split/split_dim"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split:2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select"
  op: "Select"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1"
  op: "Select"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2"
  op: "Select"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_4"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3"
  op: "Select"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_5"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4"
  op: "Select"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_6"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add_1/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_1"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/range/start"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/range"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Const_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/Rank_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/range_1/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/range_1/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/range_1"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/range_1/start"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/Rank_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/range_1/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_2/values_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_2"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_2/values_0"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/range_1"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_2/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
  op: "Transpose"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\303\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform/max"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform/mul"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50001
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/Assign"
  op: "Assign"
  input: "seq2seq/decoder/w_embs"
  input: "seq2seq/decoder/w_embs/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/w_embs/read"
  op: "Identity"
  input: "seq2seq/decoder/w_embs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
  op: "convert_gradient_to_tensor_6zp6qx6jCWM"
  input: "seq2seq/decoder/w_embs/read"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/embedding_lookup/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/embedding_lookup"
  op: "GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
  input: "split_inputs_1/split_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/embedding_lookup/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dropout/dropout/keep_prob"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/embedding_lookup"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/range/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Rank"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/concat/values_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/concat/values_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/range"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
  op: "Transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/embedding_lookup"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
  op: "TensorArrayV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/range/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/range"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/strided_slice_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Size"
  op: "Size"
  input: "split_inputs_1/split_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Const"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "split_inputs/split_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Cast"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/ExpandDims"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Cast_1"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Less"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_1"
  op: "Shape"
  input: "split_inputs/split_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/ones/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/ones/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/ones"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/ones/shape_as_tensor"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/ones/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_2"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "memory_sequence_length and memory tensor batch sizes do not match."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "memory_sequence_length and memory tensor batch sizes do not match."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/All"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert/data_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_3"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Cast_1"
  input: "^seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/concat/axis"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/LuongAttention/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_3"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/ones"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Cast_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/max"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/mul"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/Assign"
  op: "Assign"
  input: "seq2seq/decoder/memory_layer/kernel"
  input: "seq2seq/decoder/memory_layer/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/memory_layer/kernel/read"
  op: "Identity"
  input: "seq2seq/decoder/memory_layer/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/axes"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GreaterEqual/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/axes"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GreaterEqual/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Cast"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GreaterEqual"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/axes"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Less/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/axes"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Less/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Cast_1"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Less"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/axes"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Cast_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/range/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Rank"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/ListDiff"
  op: "ListDiff"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/range"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2"
  op: "GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/ListDiff"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/add_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Prod"
  op: "Prod"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Prod_1"
  op: "Prod"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/ListDiff"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/add_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/stack"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Prod"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Prod_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose"
  op: "Transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/stack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1/perm"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
  op: "Transpose"
  input: "seq2seq/decoder/memory_layer/kernel/read"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_2"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Const_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_2/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_4"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_5"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Shape_5"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit_1/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit_1/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/concat_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/concat_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/ExpandDims_3/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/expected_shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/actual"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/is_rank/actual"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/is_rank"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/Size"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/is_rank/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/all_equal/equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/all_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/all_equal"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/all_equal/equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/all_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape"
  op: "LogicalAnd"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/is_rank"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape/all_equal"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/is_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/Identity"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3/assert_shape/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/expected_shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/actual"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/is_rank/actual"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/is_rank"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/Size"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/is_rank/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/all_equal/equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/all_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/all_equal"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/all_equal/equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/all_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape"
  op: "LogicalAnd"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/is_rank"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape/all_equal"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/is_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/Identity"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4/assert_shape/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/expected_shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/actual"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/is_rank/actual"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/is_rank"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/Size"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/is_rank/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/all_equal/equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/all_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/all_equal"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/all_equal/equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/all_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape"
  op: "LogicalAnd"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/is_rank"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape/all_equal"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/is_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/Identity"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5/assert_shape/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/expected_shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/actual"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/Size"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/is_rank/actual"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/is_rank"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/Size"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/is_rank/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/all_equal/equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/all_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/all_equal"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/all_equal/equal"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/all_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape"
  op: "LogicalAnd"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/is_rank"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape/all_equal"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Wrong shape for seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6:0 [expected] [actual]."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/is_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/expected_shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/actual"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/Identity"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6/assert_shape/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When constructing AttentionWrapper attention_wrapper: Non-matching batch sizes between the memory (encoder output) and initial_cell_state.  Are you using the BeamSearchDecoder?  You may need to tile your initial state via the tf.contrib.seq2seq.tile_batch function with argument multiple=beam_width."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When constructing AttentionWrapper attention_wrapper: Non-matching batch sizes between the memory (encoder output) and initial_cell_state.  Are you using the BeamSearchDecoder?  You may need to tile your initial state via the tf.contrib.seq2seq.tile_batch function with argument multiple=beam_width."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/All"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert/data_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3"
  input: "^seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state_1"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4"
  input: "^seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state_2"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5"
  input: "^seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state_3"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6"
  input: "^seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit_2/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit_2/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperInit_2/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When calling zero_state of AttentionWrapper attention_wrapper: Non-matching batch sizes between the memory (encoder output) and the requested batch size.  Are you using the BeamSearchDecoder?  If so, make sure your encoder output has been tiled to beam_width via tf.contrib.seq2seq.tile_batch, and the batch_size= argument passed to zero_state is batch_size * beam_width."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When calling zero_state of AttentionWrapper attention_wrapper: Non-matching batch sizes between the memory (encoder output) and the requested batch size.  Are you using the BeamSearchDecoder?  If so, make sure your encoder output has been tiled to beam_width via tf.contrib.seq2seq.tile_batch, and the batch_size= argument passed to zero_state is batch_size * beam_width."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/All"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state"
  input: "^seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state_1"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state_1"
  input: "^seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state_2"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state_2"
  input: "^seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state_3"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/AttentionWrapperInit/check_initial_cell_state_3"
  input: "^seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_1/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_2/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_2/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_3/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_3/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_4/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_4"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_4/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/Const"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_5/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_5"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_5/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_6/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_6"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_6/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_7/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_7"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_7/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_2"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_6"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_7"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_2/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_3"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/concat_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_3/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_8/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_8"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_8/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_9/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_9"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/ExpandDims_9/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000Q\303\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/max"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/mul"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 50001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/Assign"
  op: "Assign"
  input: "seq2seq/decoder/dense/kernel"
  input: "seq2seq/decoder/dense/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/dense/kernel/read"
  op: "Identity"
  input: "seq2seq/decoder/dense/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50001
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/decoder/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "seq2seq/decoder/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "seq2seq/decoder/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/decoder/dense/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/dense/bias/Assign"
  op: "Assign"
  input: "seq2seq/decoder/dense/bias"
  input: "seq2seq/decoder/dense/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/dense/bias/read"
  op: "Identity"
  input: "seq2seq/decoder/dense/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Equal/x"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Equal/x"
  input: "split_inputs_1/split_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/All"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/switch_t"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/switch_f"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/pred_id"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/All"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Switch_1"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Switch_1:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Size"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_1/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_1"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Size"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_1/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_2/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_2"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Size"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_2/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_1"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_3/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_3"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/Size"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/ExpandDims_3/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_like/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Equal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_like"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_like/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
  op: "TensorArrayV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Const_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_1"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_2"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_3"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_4"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_5"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_6"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/checked_cell_state_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_7"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_8"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_9"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_10"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_12"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/Equal"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_13"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_2"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_3"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_4"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_5"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_5"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_6"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_6"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_7"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_7"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_8"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_8"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_8"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_9"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_9"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_9"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_10"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_10"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_10"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_11"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_12"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_12"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_12"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_13"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_13"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_13"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_12"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalNot"
  op: "LogicalNot"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/All"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  op: "LoopCond"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalNot"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_1"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_2"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_3"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_4"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_5"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_6"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_7"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_8"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_8"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_9"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_9"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_10"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_10"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_11"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_12"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_12"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_13"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_13"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_1"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_1:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_2"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_2:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_3"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_3:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_4"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_4:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_5"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_5:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_6"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_6:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_7"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_7:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_8"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_8:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_9"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_9:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_10"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_10:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_11"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_11:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_12"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_12:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_13"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_13:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat/axis"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_11"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_7"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\006\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1536
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  op: "Identity"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/read"
  op: "Identity"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat/axis"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split/split_dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split"
  op: "Split"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split/split_dim"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split:2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/keep_prob"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  op: "Identity"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/read"
  op: "Identity"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat/axis"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_6"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split/split_dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split"
  op: "Split"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split/split_dim"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split:2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/keep_prob"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/keep_prob"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When applying AttentionWrapper attention_wrapper_1: Non-matching batch sizes between the memory (encoder output) and the query (decoder output).  Are you using the BeamSearchDecoder?  You may need to tile your memory input via the tf.contrib.seq2seq.tile_batch function with argument multiple=beam_width."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const_3"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When applying AttentionWrapper attention_wrapper_1: Non-matching batch sizes between the memory (encoder output) and the query (decoder output).  Are you using the BeamSearchDecoder?  You may need to tile your memory input via the tf.contrib.seq2seq.tile_batch function with argument multiple=beam_width."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_4"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/decoder/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_4"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims/dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
  op: "BatchMatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  op: "Squeeze"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/Const"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  op: "Enter"
  input: "split_inputs/split_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "All values in memory_sequence_length must greater than zero."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Const_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Const_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (split_inputs/split_1:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "All values in memory_sequence_length must greater than zero."
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (split_inputs/split_1:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Shape_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims/dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Cast"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul/x"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -inf
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul/x"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
  op: "Select"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  op: "Softmax"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims/dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
  op: "ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
  op: "BatchMatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
  op: "Squeeze"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1/axis"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/max"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/RandomUniform"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform"
  op: "Add"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/mul"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Assign"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Initializer/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/read"
  op: "Identity"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2/concat_dim"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_8"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/keep_prob"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/min"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/max"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/sub"
  op: "Sub"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/max"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/RandomUniform"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/sub"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform/min"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/keep_prob"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/random_uniform"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Floor"
  op: "Floor"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
  op: "RealDiv"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/keep_prob"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/ArgMax/dimension"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/ArgMax"
  op: "ArgMax"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/ArgMax/dimension"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/Cast"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/ArgMax"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/GreaterEqual"
  op: "GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/GreaterEqual/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/GreaterEqual/Enter"
  op: "Enter"
  input: "split_inputs_1/split_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/Const"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/All"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/All"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/switch_t"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/switch_f"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/All"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Switch_1"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Switch_1:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalOr"
  op: "LogicalOr"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_12"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalNot_1"
  op: "LogicalNot"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_12"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalNot_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalOr"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Fill"
  op: "Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Select"
  op: "Select"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalAnd"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Fill"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add_1/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_1"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_2"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite_1/TensorArrayWriteV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_3"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_4"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_5"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_6"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_7"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_8"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_9"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_10"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_11"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_12"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LogicalOr"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/NextIteration_13"
  op: "NextIteration"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Select"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_2"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_3"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_4"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_5"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_6"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_7"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_8"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_9"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_10"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_11"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_12"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_13"
  op: "Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/range/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArraySizeV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/range/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/TensorArraySizeV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Rank"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_2/values_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_2"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_2/values_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_2/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose"
  op: "Transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Rank_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range_1/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range_1/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range_1"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range_1/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/Rank_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range_1/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_3/values_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_3/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_3"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_3/values_0"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/range_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_3/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose_1"
  op: "Transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack_1/TensorArrayGatherV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/axes"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GreaterEqual/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/axes"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GreaterEqual/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Cast"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GreaterEqual"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/axes"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Less/y"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/axes"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Less/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Cast_1"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Less"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/axes"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Cast_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/add_1"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/mul"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/range/start"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Rank"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/range"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2"
  op: "GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/ListDiff"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/add_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Prod"
  op: "Prod"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Prod_1"
  op: "Prod"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_1/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/ListDiff"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/add_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_1/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/stack"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Prod"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Prod_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose"
  op: "Transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/stack"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1/perm"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "seq2seq/decoder/dense/kernel/read"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000Q\303\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50001
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_2/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/GatherV2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Const_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_2/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
  op: "BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot"
  input: "seq2seq/decoder/dense/bias/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/embedding_lookup"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/Shape_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/Shape_2"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/Shape_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/Less"
  input: "seq2seq/parallel_0/seq2seq/decoder/Less"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/switch_t"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/switch_f"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/Less"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/sub"
  op: "Sub"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/sub/Switch:1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/sub/Switch_1:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/sub/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/sub/Switch_1"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_2"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/1/0"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/1"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/1/0"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/sub"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/0_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/2_1"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/cond/switch_t"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/0_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings/2_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
  op: "Pad"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/Switch:1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/cond/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_1/0"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/cond/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_1"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_1/0"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_1/Switch"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_1/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/strided_slice_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/cond/switch_f"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/Switch"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/decoder/cond/Merge"
  op: "Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/Shape"
  input: "seq2seq/parallel_0/seq2seq/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice_1/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/strided_slice_1"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/Shape_1"
  input: "seq2seq/parallel_0/seq2seq/strided_slice_1/stack"
  input: "seq2seq/parallel_0/seq2seq/strided_slice_1/stack_1"
  input: "seq2seq/parallel_0/seq2seq/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "split_inputs_1/split_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Shape"
  input: "split_inputs_1/split_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_2"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_2"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Equal"
  op: "Equal"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/All"
  op: "All"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Equal"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_0"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  op: "Assert"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/All"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_0"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_1"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_2"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_4"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_3"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Merge"
  input: "^seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/sub"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_1"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/add"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_2"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1"
  op: "StridedSlice"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape_3"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_1"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Merge"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "split_inputs_1/split_3"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/Range"
  op: "Range"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Const"
  input: "seq2seq/parallel_0/seq2seq/strided_slice_1"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "split_inputs_1/split_1"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/Cast"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/ExpandDims"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/Less"
  op: "Less"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Range"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Cast"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/SequenceMask/Cast_1"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Less"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/mul"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/Sum"
  op: "Sum"
  input: "seq2seq/parallel_0/seq2seq/mul"
  input: "seq2seq/parallel_0/seq2seq/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/Sum_1"
  op: "Sum"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Cast_1"
  input: "seq2seq/parallel_0/seq2seq/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "seq2seq/parallel_0/seq2seq/Cast"
  op: "Cast"
  input: "seq2seq/parallel_0/seq2seq/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "seq2seq/parallel_0/seq2seq/Sum"
  input: "seq2seq/parallel_0/seq2seq/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "seq2seq/parallel_0/seq2seq/Sum"
  input: "seq2seq/parallel_0/seq2seq/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optim/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optim/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optim/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/learning_rate/Assign"
  op: "Assign"
  input: "optim/learning_rate"
  input: "optim/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optim/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "optim/learning_rate/read"
  op: "Identity"
  input: "optim/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optim/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 500000
      }
    }
  }
}
node {
  name: "optim/sub"
  op: "Sub"
  input: "global_step/read"
  input: "optim/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "optim/Maximum"
  op: "Maximum"
  input: "optim/sub"
  input: "optim/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "optim/div"
  op: "FloorDiv"
  input: "optim/Maximum"
  input: "optim/div/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay/Cast"
  op: "Cast"
  input: "optim/div"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100000
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay/Cast_1"
  op: "Cast"
  input: "optim/ExponentialDecay/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay/Cast_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay/truediv"
  op: "RealDiv"
  input: "optim/ExponentialDecay/Cast"
  input: "optim/ExponentialDecay/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay/Floor"
  op: "Floor"
  input: "optim/ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay/Pow"
  op: "Pow"
  input: "optim/ExponentialDecay/Cast_2/x"
  input: "optim/ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/ExponentialDecay"
  op: "Mul"
  input: "optim/learning_rate/read"
  input: "optim/ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/Maximum_1"
  op: "Maximum"
  input: "optim/ExponentialDecay"
  input: "optim/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/learning_rate_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "optim/learning_rate_1"
      }
    }
  }
}
node {
  name: "optim/learning_rate_1"
  op: "ScalarSummary"
  input: "optim/learning_rate_1/tags"
  input: "optim/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optim/gradients/Fill"
  op: "Fill"
  input: "optim/gradients/Shape"
  input: "optim/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/f_count"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/f_count_1"
  op: "Enter"
  input: "optim/gradients/f_count"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/Merge"
  op: "Merge"
  input: "optim/gradients/f_count_1"
  input: "optim/gradients/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch"
  op: "Switch"
  input: "optim/gradients/Merge"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Add/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/Add"
  op: "Add"
  input: "optim/gradients/Switch:1"
  input: "optim/gradients/Add/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/Add"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/f_count_2"
  op: "Exit"
  input: "optim/gradients/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/b_count"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/b_count_1"
  op: "Enter"
  input: "optim/gradients/f_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/Merge_1"
  op: "Merge"
  input: "optim/gradients/b_count_1"
  input: "optim/gradients/NextIteration_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "optim/gradients/Merge_1"
  input: "optim/gradients/GreaterEqual/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "optim/gradients/b_count"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/b_count_2"
  op: "LoopCond"
  input: "optim/gradients/GreaterEqual"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_1"
  op: "Switch"
  input: "optim/gradients/Merge_1"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Sub"
  op: "Sub"
  input: "optim/gradients/Switch_1:1"
  input: "optim/gradients/GreaterEqual/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/NextIteration_1"
  op: "NextIteration"
  input: "optim/gradients/Sub"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/b_count_3"
  op: "Exit"
  input: "optim/gradients/Switch_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/f_count_3"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/f_count_4"
  op: "Enter"
  input: "optim/gradients/f_count_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/Merge_2"
  op: "Merge"
  input: "optim/gradients/f_count_4"
  input: "optim/gradients/NextIteration_2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_2"
  op: "Switch"
  input: "optim/gradients/Merge_2"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/LoopCond"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Add_1/y"
  op: "Const"
  input: "^seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/Add_1"
  op: "Add"
  input: "optim/gradients/Switch_2:1"
  input: "optim/gradients/Add_1/y"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/NextIteration_2"
  op: "NextIteration"
  input: "optim/gradients/Add_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPushV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/f_count_5"
  op: "Exit"
  input: "optim/gradients/Switch_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/b_count_4"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/b_count_5"
  op: "Enter"
  input: "optim/gradients/f_count_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/Merge_3"
  op: "Merge"
  input: "optim/gradients/b_count_5"
  input: "optim/gradients/NextIteration_3"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "optim/gradients/Merge_3"
  input: "optim/gradients/GreaterEqual_1/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "optim/gradients/b_count_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/b_count_6"
  op: "LoopCond"
  input: "optim/gradients/GreaterEqual_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_3"
  op: "Switch"
  input: "optim/gradients/Merge_3"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Sub_1"
  op: "Sub"
  input: "optim/gradients/Switch_3:1"
  input: "optim/gradients/GreaterEqual_1/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/NextIteration_3"
  op: "NextIteration"
  input: "optim/gradients/Sub_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/b_sync"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/b_count_7"
  op: "Exit"
  input: "optim/gradients/Switch_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/truediv_grad/Shape"
  input: "optim/gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "optim/gradients/Fill"
  input: "seq2seq/parallel_0/seq2seq/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/Sum"
  op: "Sum"
  input: "optim/gradients/truediv_grad/RealDiv"
  input: "optim/gradients/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/truediv_grad/Sum"
  input: "optim/gradients/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/Neg"
  op: "Neg"
  input: "seq2seq/parallel_0/seq2seq/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "optim/gradients/truediv_grad/Neg"
  input: "seq2seq/parallel_0/seq2seq/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "optim/gradients/truediv_grad/RealDiv_1"
  input: "seq2seq/parallel_0/seq2seq/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/mul"
  op: "Mul"
  input: "optim/gradients/Fill"
  input: "optim/gradients/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/truediv_grad/mul"
  input: "optim/gradients/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/truediv_grad/Sum_1"
  input: "optim/gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/truediv_grad/Reshape"
  input: "^optim/gradients/truediv_grad/Reshape_1"
}
node {
  name: "optim/gradients/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/truediv_grad/Reshape"
  input: "^optim/gradients/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/truediv_grad/Reshape_1"
  input: "^optim/gradients/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/truediv_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Tile"
  op: "Tile"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Shape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Tile"
  input: "seq2seq/parallel_0/seq2seq/SequenceMask/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/Sum_grad/Tile"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Merge"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/cond_grad"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/cond_grad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/cond_grad:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/SparseSoftmaxCrossEntropyWithLogits/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice_grad/Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/stack_2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/stack/1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/stack"
  op: "Pack"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Rank"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/stack/1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Slice/begin"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Slice"
  op: "Slice"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/paddings"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Slice/begin"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/stack"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Reshape/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/Pad/Switch:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Slice_1"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Merge_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/cond/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_4"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Shape_1"
  op: "Shape"
  input: "optim/gradients/Switch_4:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/zeros/Const"
  op: "Const"
  input: "^optim/gradients/Switch_4"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/zeros"
  op: "Fill"
  input: "optim/gradients/Shape_1"
  input: "optim/gradients/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/Switch_grad/cond_grad"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice_grad/StridedSliceGrad"
  input: "optim/gradients/zeros"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_5"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
  input: "seq2seq/parallel_0/seq2seq/decoder/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Shape_2"
  op: "Shape"
  input: "optim/gradients/Switch_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/zeros_1/Const"
  op: "Const"
  input: "^optim/gradients/Switch_5"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_1"
  op: "Fill"
  input: "optim/gradients/Shape_2"
  input: "optim/gradients/zeros_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad/Switch_grad/cond_grad"
  op: "Merge"
  input: "optim/gradients/zeros_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad_grad/Slice_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/strided_slice/Switch_grad/cond_grad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/cond/Pad/Switch_grad/cond_grad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optim/gradients/AddN"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/AddN"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/BiasAddGrad"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/AddN"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot_grad/Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000Q\303\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/Reshape_1_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_grad/transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/range"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/transpose_grad/transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_9_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_10_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_11_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/zeros_like_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_1_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_1_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_3_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_3_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_4_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_4_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_5_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_5_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_6_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_6_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_7_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_7_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_7_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_11_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Exit_11_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_11_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_1_grad/b_switch"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_3_grad/b_switch"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_4_grad/b_switch"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_5_grad/b_switch"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_6_grad/b_switch"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_7_grad/b_switch"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_11_grad/b_switch"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_7_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TensorArray"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^optim/gradients/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_7_grad/Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/DropoutWrapperZeroState/AttentionWrapperZeroState/zeros_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11_grad/Exit"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/cond_grad:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/cond_grad:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/Floor"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_6"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Shape_3"
  op: "Shape"
  input: "optim/gradients/Switch_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/zeros_3/Const"
  op: "Const"
  input: "^optim/gradients/Switch_6"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_3"
  op: "Fill"
  input: "optim/gradients/Shape_3"
  input: "optim/gradients/zeros_3/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "optim/gradients/zeros_3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2/Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  op: "ControlTrigger"
  input: "^optim/gradients/StackPushV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/add"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/Switch_7"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Shape_4"
  op: "Shape"
  input: "optim/gradients/Switch_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/f_acc"
  op: "StackV2"
  input: "optim/gradients/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/Enter"
  op: "Enter"
  input: "optim/gradients/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/Enter"
  input: "optim/gradients/Shape_4"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/Switch_8"
  op: "Switch"
  input: "optim/gradients/Switch_8/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_8/Enter"
  op: "Enter"
  input: "optim/gradients/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/Switch_8"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/zeros_4/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_4"
  op: "Fill"
  input: "optim/gradients/StackPopV2"
  input: "optim/gradients/zeros_4/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "optim/gradients/zeros_4"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg"
  op: "Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_2"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_9"
  op: "Switch"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/pred_id"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Shape_5"
  op: "Shape"
  input: "optim/gradients/Switch_9:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/zeros_5/Const"
  op: "Const"
  input: "^optim/gradients/Switch_9"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/zeros_5"
  op: "Fill"
  input: "optim/gradients/Shape_5"
  input: "optim/gradients/zeros_5/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "optim/gradients/zeros_5"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/Const_1"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/Switch_10"
  op: "Switch"
  input: "optim/gradients/Const_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "optim/gradients/Switch_10:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/zeros"
  op: "Fill"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/Shape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/b_acc"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/b_acc_1"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/b_acc"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/b_acc_1"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Switch_1_grad/cond_grad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/b_acc_2"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_1"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/Switch_1_grad/cond_grad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/Enter_grad/b_acc_2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_2"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
  input: "optim/gradients/AddN_2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "optim/gradients/AddN_2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArray"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/range"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/AddN_2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/AddN_2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_3"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/dropout/div_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optim/gradients/AddN_3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/StackPopV2"
  input: "optim/gradients/AddN_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\303\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Size"
  op: "Size"
  input: "split_inputs_1/split_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Size"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ToInt32"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice/stack"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice/stack_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ExpandDims"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/strided_slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/TrainingHelper/transpose_grad/transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "split_inputs_1/split_2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ExpandDims"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Rank"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/mod"
  op: "FloorMod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Const"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/Enter_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/mod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Slice"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Slice_1"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ConcatOffset:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Slice_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/Slice_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice"
  op: "StridedSlice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/ToInt32"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/embedding_lookup_grad/Reshape_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros"
  op: "Fill"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Shape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_1"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_1"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_2"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum/reduction_indices"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Reshape/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/sub"
  op: "Sub"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/sub"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select_1"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Shape"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Shape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul_1/Const"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul_1/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -inf
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like_grad/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/mul_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros"
  op: "Fill"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Shape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_1"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_1"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_2"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_4"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/AddN_4"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/Floor"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/AddN_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot_grad/Reshape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot_grad/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  op: "Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/concat_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1/perm"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_5"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Shape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/AddN_5"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Mul_1"
  op: "Mul"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
  input: "optim/gradients/AddN_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_6"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "optim/gradients/AddN_6"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/AddN_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/LuongAttention/SequenceMask/Cast_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_7"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/AddN_7"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/AddN_7"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_5"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Tanh_grad/TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Const"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Const"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_6"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/mod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/range"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_1_grad/transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_3_grad/Exit"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_4_grad/Exit"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_5_grad/Exit"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Enter_6_grad/Exit"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_3_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_3_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_4_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_4_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_5_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_5_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_6_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_6_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Exit_2_grad/b_exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_2_grad_1/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_3_grad/b_switch"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_4_grad/b_switch"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_5_grad/b_switch"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_6_grad/b_switch"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_2_grad/b_switch"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/Switch"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/Switch"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/Switch:1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_3_grad/Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_3"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/b_sync"
  op: "ControlTrigger"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/GreaterEqual"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_4_grad/Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_4"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_4"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_4"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/Select"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/Select_1"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/Select_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/Select_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_5_grad/Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like"
  op: "ZerosLike"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_5"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_5"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_5"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/Select"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/Select_1"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/Select_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/Select_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Enter_6_grad/Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/LSTMCellZeroState/zeros_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like"
  op: "ZerosLike"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_6"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_6"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_6"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/Select"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/Select_1"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/Select_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/Select_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_8"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "optim/gradients/AddN_8"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/AddN_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/zeros_like/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/Select"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/zeros_like"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/zeros_like"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/Select_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/Select"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/Select_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/zeros/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/zeros"
  op: "Fill"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/Shape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/zeros/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/b_acc"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/zeros"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/b_acc_1"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/b_acc"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/b_acc_1"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/b_acc_2"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_9"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/AddN_9"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/AddN_9"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/zeros_grad/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/zeros_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select/Enter_grad/b_acc_2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/zeros_grad/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/zeros"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  op: "Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_3"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Tanh_grad/TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Const"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1536
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_10"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "optim/gradients/AddN_10"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/AddN_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Const"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_4"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/mod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Const"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Rank"
  op: "Const"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/mod"
  op: "FloorMod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Const"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN"
  op: "ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_11"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter_1"
  input: "seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Identity_7"
  input: "^optim/gradients/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/mod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice_1"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ConcatOffset:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_11"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/AddN_11"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/AddN_11"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_11_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Switch_7_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_12"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_3_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/AddN_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Tanh_grad/TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/add_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Const"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split_grad/concat"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Const"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/mod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ConcatOffset:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/Slice_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_13"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_4_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/AddN_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_14"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "optim/gradients/AddN_14"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/AddN_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_15"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/AddN_15"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/AddN_15"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/Identity_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Shape_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_16"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Sum_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Shape_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/Reshape_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/AddN_16"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Tanh_grad/TanhGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/add_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Const"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split_grad/concat"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul/Enter"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/MatMul_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Const"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Rank"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
  input: "^optim/gradients/Add_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN/f_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/mod"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ConcatOffset:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/ShapeN:1"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/Slice_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^optim/gradients/Sub_1"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/AddN_17"
  op: "AddN"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Select_2_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/concat_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "optim/gradients/b_count_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "optim/gradients/AddN_17"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "optim/gradients"
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArray_1"
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/range"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/device:GPU:0"
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "seq2seq/parallel_0/seq2seq/encoder/rnn/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_grad/InvertPermutation"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\303\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Shape"
  device: "/device:GPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Size"
  op: "Size"
  input: "split_inputs/split_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Size"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ExpandDims/dim"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ToInt32"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice/stack"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice/stack_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/concat/axis"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ExpandDims"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/strided_slice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/concat/axis"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/transpose_grad/transpose"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/concat"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "split_inputs/split_2"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ExpandDims"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_1"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_2"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice"
  op: "StridedSlice"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/ToInt32"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice/stack_2"
  device: "/device:GPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Reshape"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/embedding_lookup_grad/Reshape_1"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/strided_slice"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_12"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/L2Loss_13"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/stack"
  op: "Pack"
  input: "optim/global_norm/L2Loss"
  input: "optim/global_norm/L2Loss_1"
  input: "optim/global_norm/L2Loss_2"
  input: "optim/global_norm/L2Loss_3"
  input: "optim/global_norm/L2Loss_4"
  input: "optim/global_norm/L2Loss_5"
  input: "optim/global_norm/L2Loss_6"
  input: "optim/global_norm/L2Loss_7"
  input: "optim/global_norm/L2Loss_8"
  input: "optim/global_norm/L2Loss_9"
  input: "optim/global_norm/L2Loss_10"
  input: "optim/global_norm/L2Loss_11"
  input: "optim/global_norm/L2Loss_12"
  input: "optim/global_norm/L2Loss_13"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "optim/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/global_norm/Sum"
  op: "Sum"
  input: "optim/global_norm/stack"
  input: "optim/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "optim/global_norm/mul"
  op: "Mul"
  input: "optim/global_norm/Sum"
  input: "optim/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/global_norm"
  op: "Sqrt"
  input: "optim/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "optim/global_norm/gradient_norm"
      }
    }
  }
}
node {
  name: "optim/global_norm/gradient_norm"
  op: "ScalarSummary"
  input: "optim/global_norm/gradient_norm/tags"
  input: "optim/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_5"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_6"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_7"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1_grad/transpose"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_8"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_9"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_10"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_11"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_12"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/L2Loss_13"
  op: "L2Loss"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/stack"
  op: "Pack"
  input: "optim/global_norm_1/L2Loss"
  input: "optim/global_norm_1/L2Loss_1"
  input: "optim/global_norm_1/L2Loss_2"
  input: "optim/global_norm_1/L2Loss_3"
  input: "optim/global_norm_1/L2Loss_4"
  input: "optim/global_norm_1/L2Loss_5"
  input: "optim/global_norm_1/L2Loss_6"
  input: "optim/global_norm_1/L2Loss_7"
  input: "optim/global_norm_1/L2Loss_8"
  input: "optim/global_norm_1/L2Loss_9"
  input: "optim/global_norm_1/L2Loss_10"
  input: "optim/global_norm_1/L2Loss_11"
  input: "optim/global_norm_1/L2Loss_12"
  input: "optim/global_norm_1/L2Loss_13"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "optim/global_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/global_norm_1/Sum"
  op: "Sum"
  input: "optim/global_norm_1/stack"
  input: "optim/global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/global_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "optim/global_norm_1/mul"
  op: "Mul"
  input: "optim/global_norm_1/Sum"
  input: "optim/global_norm_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_1/global_norm"
  op: "Sqrt"
  input: "optim/global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "optim/clip_by_global_norm/truediv/x"
  input: "optim/global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "optim/clip_by_global_norm/Const"
  input: "optim/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "optim/clip_by_global_norm/truediv"
  input: "optim/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul"
  op: "Mul"
  input: "optim/clip_by_global_norm/mul/x"
  input: "optim/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_0"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_1"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_2"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_3"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_4"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM_grad/UnsortedSegmentSum"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_5"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1_grad/transpose"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_6"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1_grad/transpose"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_7"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd_grad/tuple/control_dependency_1"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_8"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_10"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_9"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_11"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_10"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_12"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_11"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_13"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_12"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/mul_14"
  op: "Mul"
  input: "optim/gradients/seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter_grad/b_acc_3"
  input: "optim/clip_by_global_norm/mul"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/clip_by_global_norm/optim/clip_by_global_norm/_13"
  op: "Identity"
  input: "optim/clip_by_global_norm/mul_14"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_1"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_2"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_3"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_4"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/encoder/rnn/while/rnn/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_5"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/convert_gradient_to_tensor_6zp6qx6jCWM"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_6"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/LuongAttention/memory_layer/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_7"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/Tensordot/transpose_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_8"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_9"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_10"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_11"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_12"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/BiasAdd/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/L2Loss_13"
  op: "L2Loss"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/parallel_0/seq2seq/decoder/decoder_1/while/BasicDecoderStep/decoder/attention_wrapper/attention_layer/MatMul/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/stack"
  op: "Pack"
  input: "optim/global_norm_2/L2Loss"
  input: "optim/global_norm_2/L2Loss_1"
  input: "optim/global_norm_2/L2Loss_2"
  input: "optim/global_norm_2/L2Loss_3"
  input: "optim/global_norm_2/L2Loss_4"
  input: "optim/global_norm_2/L2Loss_5"
  input: "optim/global_norm_2/L2Loss_6"
  input: "optim/global_norm_2/L2Loss_7"
  input: "optim/global_norm_2/L2Loss_8"
  input: "optim/global_norm_2/L2Loss_9"
  input: "optim/global_norm_2/L2Loss_10"
  input: "optim/global_norm_2/L2Loss_11"
  input: "optim/global_norm_2/L2Loss_12"
  input: "optim/global_norm_2/L2Loss_13"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "optim/global_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "optim/global_norm_2/Sum"
  op: "Sum"
  input: "optim/global_norm_2/stack"
  input: "optim/global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "optim/global_norm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "optim/global_norm_2/mul"
  op: "Mul"
  input: "optim/global_norm_2/Sum"
  input: "optim/global_norm_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm_2/global_norm"
  op: "Sqrt"
  input: "optim/global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/global_norm/clipped_gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "optim/global_norm/clipped_gradient_norm"
      }
    }
  }
}
node {
  name: "optim/global_norm/clipped_gradient_norm"
  op: "ScalarSummary"
  input: "optim/global_norm/clipped_gradient_norm/tags"
  input: "optim/global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "optim/train/update_seq2seq/encoder/w_embs/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/encoder/w_embs"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_0"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/w_embs/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/w_embs"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/memory_layer/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/memory_layer/kernel"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/dense/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/dense/kernel"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/dense/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/dense/bias"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update_seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  input: "optim/Maximum_1"
  input: "optim/clip_by_global_norm/optim/clip_by_global_norm/_13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/train/update"
  op: "NoOp"
  input: "^optim/train/update_seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/dense/bias/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/dense/kernel/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/memory_layer/kernel/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/decoder/w_embs/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyGradientDescent"
  input: "^optim/train/update_seq2seq/encoder/w_embs/ApplyGradientDescent"
  device: "/device:GPU:0"
}
node {
  name: "optim/train/value"
  op: "Const"
  input: "^optim/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "optim/train"
  op: "AssignAdd"
  input: "global_step"
  input: "optim/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "optim/control_dependency"
  op: "Identity"
  input: "truediv"
  input: "^optim/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^optim/learning_rate/Assign"
  input: "^words_per_sec/features_init/Assign"
  input: "^words_per_sec/labels_init/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel/Assign"
  input: "^seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
  input: "^seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
  input: "^seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
  input: "^seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
  input: "^seq2seq/decoder/dense/bias/Assign"
  input: "^seq2seq/decoder/dense/kernel/Assign"
  input: "^seq2seq/decoder/memory_layer/kernel/Assign"
  input: "^seq2seq/decoder/w_embs/Assign"
  input: "^seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
  input: "^seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
  input: "^seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
  input: "^seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
  input: "^seq2seq/encoder/w_embs/Assign"
  device: "/device:GPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "words_per_sec/features_init"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/features_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "words_per_sec/labels_init"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/labels_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/w_embs"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/w_embs"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/memory_layer/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/dense/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/dense/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "optim/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optim/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 18
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: "global_step"
        string_val: "words_per_sec/features_init"
        string_val: "words_per_sec/labels_init"
        string_val: "seq2seq/encoder/w_embs"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/decoder/w_embs"
        string_val: "seq2seq/decoder/memory_layer/kernel"
        string_val: "seq2seq/decoder/dense/kernel"
        string_val: "seq2seq/decoder/dense/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
        string_val: "optim/learning_rate"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "words_per_sec/features_init"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/features_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "words_per_sec/labels_init"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/labels_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/w_embs"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/w_embs"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/memory_layer/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/dense/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/dense/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "optim/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optim/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 18
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: "global_step"
        string_val: "words_per_sec/features_init"
        string_val: "words_per_sec/labels_init"
        string_val: "seq2seq/encoder/w_embs"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/decoder/w_embs"
        string_val: "seq2seq/decoder/memory_layer/kernel"
        string_val: "seq2seq/decoder/dense/kernel"
        string_val: "seq2seq/decoder/dense/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
        string_val: "optim/learning_rate"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 18
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 18
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^MakeIterator"
  input: "^string_to_index/hash_table/table_init"
  input: "^string_to_index_1/hash_table/table_init"
  device: "/device:CPU:0"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1/NoOp"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
}
node {
  name: "group_deps_1/NoOp_1"
  op: "NoOp"
  input: "^init_all_tables"
  device: "/device:CPU:0"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^group_deps_1/NoOp"
  input: "^group_deps_1/NoOp_1"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "optim/learning_rate_1"
  input: "optim/global_norm/gradient_norm"
  input: "optim/global_norm/clipped_gradient_norm"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_2028faf425624f6b85018937fe175f1f/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4
          }
        }
        string_val: "global_step"
        string_val: "optim/learning_rate"
        string_val: "words_per_sec/features_init"
        string_val: "words_per_sec/labels_init"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "optim/learning_rate"
  input: "words_per_sec/features_init"
  input: "words_per_sec/labels_init"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename_1/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/decoder/dense/bias"
        string_val: "seq2seq/decoder/dense/kernel"
        string_val: "seq2seq/decoder/memory_layer/kernel"
        string_val: "seq2seq/decoder/w_embs"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/encoder/w_embs"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/ShardedFilename_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "seq2seq/decoder/dense/bias"
  input: "seq2seq/decoder/dense/kernel"
  input: "seq2seq/decoder/memory_layer/kernel"
  input: "seq2seq/decoder/w_embs"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "seq2seq/encoder/w_embs"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/ShardedFilename_1"
  input: "^save/SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "save/ShardedFilename_1"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4
          }
        }
        string_val: "global_step"
        string_val: "optim/learning_rate"
        string_val: "words_per_sec/features_init"
        string_val: "words_per_sec/labels_init"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "optim/learning_rate"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@optim/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "words_per_sec/features_init"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/features_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "words_per_sec/labels_init"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words_per_sec/labels_init"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/decoder/dense/bias"
        string_val: "seq2seq/decoder/dense/kernel"
        string_val: "seq2seq/decoder/memory_layer/kernel"
        string_val: "seq2seq/decoder/w_embs"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
        string_val: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
        string_val: "seq2seq/encoder/w_embs"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
  input: "save/RestoreV2_1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/attention_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "save/RestoreV2_1:1"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "save/RestoreV2_1:2"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1536
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "save/RestoreV2_1:3"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "save/RestoreV2_1:4"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/decoder/attention_wrapper/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "seq2seq/decoder/dense/bias"
  input: "save/RestoreV2_1:5"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "seq2seq/decoder/dense/kernel"
  input: "save/RestoreV2_1:6"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 50001
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "seq2seq/decoder/memory_layer/kernel"
  input: "save/RestoreV2_1:7"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "seq2seq/decoder/w_embs"
  input: "save/RestoreV2_1:8"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/decoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
  input: "save/RestoreV2_1:9"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
  input: "save/RestoreV2_1:10"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
  input: "save/RestoreV2_1:11"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
  input: "save/RestoreV2_1:12"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 2048
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "seq2seq/encoder/w_embs"
  input: "save/RestoreV2_1:13"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@seq2seq/encoder/w_embs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50001
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard_1"
  op: "NoOp"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  device: "/device:GPU:0"
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/restore_shard"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/restore_shard_1"
  device: "/device:GPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
library {
  function {
    signature {
      name: "tf_reduce_func_l6Icvp8rAiY"
      input_arg {
        name: "key"
        type: DT_INT64
      }
      input_arg {
        name: "window_dataset_variant"
        type: DT_VARIANT
      }
      output_arg {
        name: "paddedbatchdataset"
        type: DT_VARIANT
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 64
          }
        }
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Const_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "Const_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "Const_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "Const_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Const_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "padding_value"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "padding_value_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "padding_value_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "padding_value_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "padding_value_4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "padding_value_5"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "padding_value_6"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "PaddedBatchDataset"
      op: "PaddedBatchDataset"
      input: "window_dataset_variant"
      input: "batch_size:output:0"
      input: "Const:output:0"
      input: "Const_1:output:0"
      input: "Const_2:output:0"
      input: "Const_3:output:0"
      input: "Const_4:output:0"
      input: "Const_5:output:0"
      input: "Const_6:output:0"
      input: "padding_value:output:0"
      input: "padding_value_1:output:0"
      input: "padding_value_2:output:0"
      input: "padding_value_3:output:0"
      input: "padding_value_4:output:0"
      input: "padding_value_5:output:0"
      input: "padding_value_6:output:0"
      attr {
        key: "N"
        value {
          i: 7
        }
      }
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT32
            type: DT_STRING
            type: DT_INT64
            type: DT_INT64
            type: DT_INT32
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    ret {
      key: "paddedbatchdataset"
      value: "PaddedBatchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "convert_gradient_to_tensor_6zp6qx6jCWM"
      input_arg {
        name: "x_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "x"
        type: DT_FLOAT
      }
      description: "Wraps :obj:`x` to convert its gradient to a tensor."
    }
    ret {
      key: "x"
      value: "x_0"
    }
  }
  function {
    signature {
      name: "tf_map_func_QXKrvmWWnm8"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      input_arg {
        name: "arg1"
        type: DT_STRING
      }
      input_arg {
        name: "string_to_index_lookup_hash_table_lookup_placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "string_to_index_lookup_hash_table_lookup_placeholder_1"
        type: DT_INT64
      }
      input_arg {
        name: "string_to_index_1_lookup_hash_table_lookup_placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "string_to_index_1_lookup_hash_table_lookup_placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "string_to_index_lookup"
        type: DT_INT64
      }
      output_arg {
        name: "strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "stringsplit"
        type: DT_STRING
      }
      output_arg {
        name: "concat_1"
        type: DT_INT64
      }
      output_arg {
        name: "concat"
        type: DT_INT64
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "stringsplit_1"
        type: DT_STRING
      }
      description: "A wrapper for Defun that facilitates shape inference."
      is_stateful: true
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: " "
          }
        }
      }
    }
    node_def {
      name: "packed"
      op: "Pack"
      input: "arg0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "StringSplit"
      op: "StringSplit"
      input: "packed:output:0"
      input: "Const:output:0"
      attr {
        key: "skip_empty"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Shape"
      op: "Shape"
      input: "StringSplit:values:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_0"
      op: "StridedSlice"
      input: "Shape:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "string_to_index_Lookup/hash_bucket"
      op: "StringToHashBucketFast"
      input: "StringSplit:values:0"
      attr {
        key: "num_buckets"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "string_to_index_Lookup/hash_table_Lookup"
      op: "LookupTableFindV2"
      input: "string_to_index_lookup_hash_table_lookup_placeholder"
      input: "StringSplit:values:0"
      input: "string_to_index_lookup_hash_table_lookup_placeholder_1"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "string_to_index_Lookup/hash_table_Size"
      op: "LookupTableSizeV2"
      input: "string_to_index_lookup_hash_table_lookup_placeholder"
    }
    node_def {
      name: "string_to_index_Lookup/Add"
      op: "Add"
      input: "string_to_index_Lookup/hash_bucket:output:0"
      input: "string_to_index_Lookup/hash_table_Size:size:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "string_to_index_Lookup/NotEqual"
      op: "NotEqual"
      input: "string_to_index_Lookup/hash_table_Lookup:values:0"
      input: "string_to_index_lookup_hash_table_lookup_placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "string_to_index_Lookup"
      op: "Select"
      input: "string_to_index_Lookup/NotEqual:z:0"
      input: "string_to_index_Lookup/hash_table_Lookup:values:0"
      input: "string_to_index_Lookup/Add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: " "
          }
        }
      }
    }
    node_def {
      name: "packed_1"
      op: "Pack"
      input: "arg1"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "StringSplit_1"
      op: "StringSplit"
      input: "packed_1:output:0"
      input: "Const_1:output:0"
      attr {
        key: "skip_empty"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Shape_1"
      op: "Shape"
      input: "StringSplit_1:values:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "Shape_1:output:0"
      input: "strided_slice_1/stack:output:0"
      input: "strided_slice_1/stack_1:output:0"
      input: "strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "string_to_index_1_Lookup/hash_bucket"
      op: "StringToHashBucketFast"
      input: "StringSplit_1:values:0"
      attr {
        key: "num_buckets"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "string_to_index_1_Lookup/hash_table_Lookup"
      op: "LookupTableFindV2"
      input: "string_to_index_1_lookup_hash_table_lookup_placeholder"
      input: "StringSplit_1:values:0"
      input: "string_to_index_1_lookup_hash_table_lookup_placeholder_1"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "string_to_index_1_Lookup/hash_table_Size"
      op: "LookupTableSizeV2"
      input: "string_to_index_1_lookup_hash_table_lookup_placeholder"
    }
    node_def {
      name: "string_to_index_1_Lookup/Add"
      op: "Add"
      input: "string_to_index_1_Lookup/hash_bucket:output:0"
      input: "string_to_index_1_Lookup/hash_table_Size:size:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "string_to_index_1_Lookup/NotEqual"
      op: "NotEqual"
      input: "string_to_index_1_Lookup/hash_table_Lookup:values:0"
      input: "string_to_index_1_lookup_hash_table_lookup_placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "string_to_index_1_Lookup"
      op: "Select"
      input: "string_to_index_1_Lookup/NotEqual:z:0"
      input: "string_to_index_1_Lookup/hash_table_Lookup:values:0"
      input: "string_to_index_1_Lookup/Add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Const_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "Const_2:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Const_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "Cast_1"
      op: "Cast"
      input: "Const_3:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat_0"
      op: "ConcatV2"
      input: "string_to_index_1_Lookup:output:0"
      input: "Cast_1:y:0"
      input: "concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "concat_1/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat_1_0"
      op: "ConcatV2"
      input: "Cast:y:0"
      input: "string_to_index_1_Lookup:output:0"
      input: "concat_1/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "Add"
      input: "strided_slice_1:output:0"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "concat"
      value: "concat_0:output:0"
    }
    ret {
      key: "concat_1"
      value: "concat_1_0:output:0"
    }
    ret {
      key: "strided_slice"
      value: "strided_slice_0:output:0"
    }
    ret {
      key: "string_to_index_lookup"
      value: "string_to_index_Lookup:output:0"
    }
    ret {
      key: "stringsplit"
      value: "StringSplit:values:0"
    }
    ret {
      key: "stringsplit_1"
      value: "StringSplit_1:values:0"
    }
  }
  function {
    signature {
      name: "tf_predicate_y4hpkliXgSs"
      input_arg {
        name: "arg0"
        type: DT_INT64
      }
      input_arg {
        name: "arg1"
        type: DT_INT32
      }
      input_arg {
        name: "arg2"
        type: DT_STRING
      }
      input_arg {
        name: "arg3"
        type: DT_INT64
      }
      input_arg {
        name: "arg4"
        type: DT_INT64
      }
      input_arg {
        name: "arg5"
        type: DT_INT32
      }
      input_arg {
        name: "arg6"
        type: DT_STRING
      }
      output_arg {
        name: "all"
        type: DT_BOOL
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "Greater/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Greater"
      op: "Greater"
      input: "arg1"
      input: "Greater/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "LessEqual/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 50
          }
        }
      }
    }
    node_def {
      name: "LessEqual"
      op: "LessEqual"
      input: "arg1"
      input: "LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Greater_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Greater_1"
      op: "Greater"
      input: "arg5"
      input: "Greater_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "LessEqual_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 50
          }
        }
      }
    }
    node_def {
      name: "LessEqual_1"
      op: "LessEqual"
      input: "arg5"
      input: "LessEqual_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Rank/packed"
      op: "Pack"
      input: "Greater:z:0"
      input: "LessEqual:z:0"
      input: "Greater_1:z:0"
      input: "LessEqual_1:z:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Rank"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "range/start"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "range/delta"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "range"
      op: "Range"
      input: "range/start:output:0"
      input: "Rank:output:0"
      input: "range/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "All/input"
      op: "Pack"
      input: "Greater:z:0"
      input: "LessEqual:z:0"
      input: "Greater_1:z:0"
      input: "LessEqual_1:z:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "All"
      op: "All"
      input: "All/input:output:0"
      input: "range:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "all"
      value: "All:output:0"
    }
  }
  function {
    signature {
      name: "tf_key_func_2zDJOG27JE0"
      input_arg {
        name: "arg0"
        type: DT_INT64
      }
      input_arg {
        name: "arg1"
        type: DT_INT32
      }
      input_arg {
        name: "arg2"
        type: DT_STRING
      }
      input_arg {
        name: "arg3"
        type: DT_INT64
      }
      input_arg {
        name: "arg4"
        type: DT_INT64
      }
      input_arg {
        name: "arg5"
        type: DT_INT32
      }
      input_arg {
        name: "arg6"
        type: DT_STRING
      }
      output_arg {
        name: "toint64"
        type: DT_INT64
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "floordiv/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "floordiv"
      op: "FloorDiv"
      input: "arg1"
      input: "floordiv/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Maximum"
      op: "Maximum"
      input: "Const:output:0"
      input: "floordiv:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "floordiv_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "floordiv_1"
      op: "FloorDiv"
      input: "arg5"
      input: "floordiv_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Maximum_1"
      op: "Maximum"
      input: "Maximum:z:0"
      input: "floordiv_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "ToInt64"
      op: "Cast"
      input: "Maximum_1:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "toint64"
      value: "ToInt64:y:0"
    }
  }
  function {
    signature {
      name: "tf_window_size_func_1AjaO2cYIvE"
      input_arg {
        name: "key"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_INT64
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 64
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
  }
}
versions {
  producer: 26
  min_consumer: 12
}
